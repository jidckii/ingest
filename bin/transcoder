#!/bin/bash

pre_list_file=/opt/transcoder/tmp/pre_list_file.txt
list_file=/opt/transcoder/tmp/list_file.txt
tmp_video_size1=/opt/transcoder/tmp/tmp_video_size1.txt
tmp_video_size2=/opt/transcoder/tmp/tmp_video_size2.txt
tmp_video_size_hum=/opt/transcoder/tmp/tmp_video_size_hum.txt
log_file=/opt/transcoder/log/log_file.txt
date_time_file=/opt/transcoder/tmp/date_time.txt

# Изначально пользователя с таким именем нужно создать

user='transcoder'

queue_path=/home/$user/queue-video-tmp/
source_path=/home/$user/source-video-tmp/
end_path=/home/$user/end-video-tmp/
frank_path=/home/$user/frank/
dalet_path=/home/$user/dalet

text1="Проверка наличия видео материала в очереди ..."
text2="Ожидается пауза при копировании в папку с очередью"
text3="Идет обсчет"
text4="Обсчет завершен, копирую на frank"
text5="Копирование завершено, удаляю временные файлы"
text6="Обсчет завершен, копирую в Dalet"
text7="Обнаружен материал объемом"

while [ "1" -eq "1" ]	# Заходим в цикл и работаем как бы в режиме демона
do
    du -s $queue_path | awk '{print $1}' > $tmp_video_size1 	
    tmp_video_size1_num=`cat $tmp_video_size1`
    sleep 10
    echo -e '\n' "\e[0;32m $text1 \e[0m" '\n'
        while [ "$tmp_video_size1_num" -gt "1000" ]	# Проверям размер раталога
        do
            du -s $queue_path | awk '{print $1}' > $tmp_video_size1
            sleep 10
            du -s $queue_path | awk '{print $1}' > $tmp_video_size2
	    du -s -h $queue_path | awk '{print $1}' > $tmp_video_size_hum
            tmp_video_size1_num=`cat $tmp_video_size1`
            tmp_video_size2_num=`cat $tmp_video_size2`
	    tmp_video_size_hum_num=`cat $tmp_video_size_hum`
	    echo -e '\n' "\e[1;32m $text7 \e[1;31m $tmp_video_size_hum_num  \e[0m" '\n'
                if [ "$tmp_video_size1_num" -eq "$tmp_video_size2_num" ]	# Убеждаемся, что временный каталог более не растет 
                then
                    date +%H:%M_%d-%m-%Y > $date_time_file
                    date_time=`cat $date_time_file`
                    next_file=`ls -t -r -1 $queue_path | awk '{print $1}' | head -n 1`
                    mv $queue_path$next_file $source_path		# перемещаем из очереди в рабочий каталог
                    end_file_name=`ls -1 $source_path`
                    find $source_path -name "*.MP4" >> $pre_list_file	# Ищем  нужный материал
                    find $source_path -name "*.MTS" >> $pre_list_file	
                    awk '{print "file \x27"$0"\x27"}' $pre_list_file | sort > $list_file # Формируем лист отсортировав по имени
                    du -s -h $source_path | awk '{print $1}' > $tmp_video_size_hum
		    tmp_video_size_hum_num=`cat $tmp_video_size_hum`
		    echo -e '\n' "\e[1;36m $text3 \e[1;33m $end_file_name \e[1;36m объемом \e[1;31m $tmp_video_size_hum_num \e[0m" '\n'
                    echo $date_time > $log_file
                    echo $end_file_name >> $log_file
                    sleep 2
		# Запускаем обсчет
		    ffmpeg -f concat -safe 0 -i $list_file -c:v dvvideo -s 720x576 -vf crop=in_w-2*222 -c:a pcm_s16le -f mov $end_path$end_file_name.mov >> $log_file 2>&1
                    echo -e '\n' "\e[4;33m $text4 \e[0m" '\n'
                    cp $end_path* $frank_path >> $log_file
                    echo -e '\n' "\e[1;31m $text5 \e[0m" '\n'
                    rm -r -f $source_path* && rm -r -f $end_path* && rm $tmp_video_size1 $tmp_video_size2 $pre_list_file $list_filei >> $log_file
                    cp $log_file $frank_path'LOG_'$date_time'_'$end_file_name.txt
                    break
                else
                    echo -e '\n' "\e[1;31m $text2 \e[0m" '\n'
                    continue
                fi
        done
done

